import argparse
import subprocess
import os
import shutil

#set up parser
parser = argparse.ArgumentParser(
                    prog='predictor',
                    description='Script that performs the gene prediction of a new assembly using braker3',
                    epilog='')

parser.add_argument('assemblydir',help="path to the assembly directory generated by assembly.py (containing a working directory and results directory)")
parser.add_argument('proteindb',help="path to the database of other snail proteins as an unzipped fasta")
parser.add_argument('cdna_input1',help="path to the forward short read cdna data fastq")
parser.add_argument('cdna_input2',help="path to the reverse short read cdna data fastq")
parser.add_argument('-s', '--snail', help="the name of the snail genome being assembled, default = lmaximus" )
parser.add_argument('-t', '--threads', help="the amount of threads you'd like to use (default = 94)")

args=parser.parse(args)

snail=args.snail.replace(" ","")
assemblydir=args.assemblydir
cdna1=args.cdna_input1
cdna2=args.cdna_input2
threads=args.threads
proteindb=args.proteindb

if threads==None:
    threads=94

if outfile.endswith("/"):
    outfile=outfile[:-1]

if snail == None:
    snail="lmaximus"

assembly=f"{assemblydir}/results/{snail}_final_assembly.fasta"

subprocess.run(f"exec braker3.sif braker.pl --busco_lineage=mollusca --gff --threads {assembly} --genome={}  --prot_seq={proteindb}")


mbilineatum_25_chromosomes.fasta mbilineatum.index

hisat2 -x mbilineatum.index -1 ../fastq/SRR25867028/SRR25867028_1_val_1.fq.gz -2 ../fastq/SRR25867028/SRR25867028_2_val_2.fq.gz -p 96 -S mbilineatum.sam
